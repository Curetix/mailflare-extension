name: "Build Extension"
on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: Build extension
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - chrome-mv3
          - edge-mv3
          - firefox-mv2
          - firefox-mv3
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "latest"
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build extension
        run: pnpm build --target=${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: build/${{ matrix.target }}-prod.zip

  publish:
    name: Publish to stores
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref_type == 'tag' && startsWith(github.ref_name, 'v') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download built extensions
        uses: actions/download-artifact@v3

      - name: Publish to store
        uses: PlasmoHQ/bpp@v3
        with:
          keys: ${{ secrets.SUBMIT_KEYS }}
          chrome-file: chrome-mv3/chrome-mv3-prod.zip
          edge-file: edge-mv3/edge-mv3-prod.zip
          firefox-file: firefox-mv2/firefox-mv2-prod.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: "TBA"
          draft: false
          prerelease: false
          files: |
            chrome-mv3/chrome-mv3-prod.zip
            edge-mv3/edge-mv3-prod.zip
            firefox-mv2/firefox-mv2-prod.zip
